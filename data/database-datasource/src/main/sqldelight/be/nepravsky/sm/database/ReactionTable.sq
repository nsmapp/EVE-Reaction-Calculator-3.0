import be.nepravsky.sm.database.models.ReactionItemEntity;
import kotlin.collections.List;
import kotlin.Boolean;

CREATE TABLE reaction (
    id        INTEGER PRIMARY KEY
                      NOT NULL,
    groupId  INTEGER NOT NULL,
    isFormula  INTEGER AS Boolean NOT NULL DEFAULT 0,
    de        TEXT    NOT NULL,
    en        TEXT    NOT NULL,
    fr        TEXT    NOT NULL,
    ja        TEXT    NOT NULL,
    ru        TEXT    NOT NULL,
    zh        TEXT    NOT NULL,
    baseTime INTEGER NOT NULL,
    runLimit INTEGER NOT NULL,
    materials TEXT    AS List<ReactionItemEntity> NOT NULL,
    products  TEXT    AS List<ReactionItemEntity> NOT NULL
);

getAll:
SELECT * FROM reaction;

getBpcShort:
SELECT id, groupId, baseTime, runLimit,
CASE (SELECT langId FROM settings WHERE id = 1)
  WHEN 12 THEN en
  WHEN 13 THEN fr
  WHEN 16 THEN ja
  WHEN 17 THEN zh
  ELSE en
  END AS name
FROM reaction
WHERE CASE (SELECT langId FROM settings WHERE id = 1)
  WHEN 12 THEN en LIKE ('%' || :query || '%') AND groupId IN :groupId
  WHEN 13 THEN fr LIKE ('%' || :query || '%') AND groupId IN :groupId
  WHEN 16 THEN ja LIKE ('%' || :query || '%') AND groupId IN :groupId
  WHEN 17 THEN zh LIKE ('%' || :query || '%') AND groupId IN :groupId
  ELSE en LIKE ('%' || :query || '%')  AND groupId IN :groupId
  END
ORDER BY groupId, name ASC;

getBpcFull:
SELECT id, groupId, isFormula, baseTime, runLimit, materials, products,
CASE (SELECT langId FROM settings WHERE id = 1)
  WHEN 12 THEN en
  WHEN 13 THEN fr
  WHEN 16 THEN ja
  WHEN 17 THEN zh
  ELSE en
  END AS name
FROM reaction
WHERE id = :id AND
groupId != CASE (SELECT isIgnoreFuelBlock FROM settings WHERE id == 1) WHEN 1 THEN 1137 ELSE -1 END;


getBpcFullList:
SELECT id, groupId, isFormula, baseTime, runLimit, materials, products,
CASE (SELECT langId FROM settings WHERE id = 1)
  WHEN 12 THEN en
  WHEN 13 THEN fr
  WHEN 16 THEN ja
  WHEN 17 THEN zh
  ELSE en
  END AS name
FROM reaction
WHERE id IN ?;
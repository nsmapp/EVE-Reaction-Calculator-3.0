import be.nepravsky.sm.database.models.ReactionItemEntity;
import kotlin.collections.List;
import kotlin.Boolean;

CREATE TABLE reaction (
    id        INTEGER PRIMARY KEY
                      NOT NULL,
    groupId  INTEGER NOT NULL,
    isFormula  INTEGER AS Boolean NOT NULL DEFAULT 0,
    de        TEXT    NOT NULL,
    en        TEXT    NOT NULL,
    fr        TEXT    NOT NULL,
    ja        TEXT    NOT NULL,
    ru        TEXT    NOT NULL,
    zh        TEXT    NOT NULL,
    baseTime INTEGER NOT NULL,
    runLimit INTEGER NOT NULL,
    materials TEXT    AS List<ReactionItemEntity> NOT NULL,
    products  TEXT    AS List<ReactionItemEntity> NOT NULL
);

getAll:
SELECT * FROM reaction;

getFilteredByEng:
SELECT *
FROM reaction
WHERE en LIKE ('%' || :query || '%')  AND groupId IN ?
ORDER BY groupId, en ASC;

getBpcShort:
SELECT id, groupId, baseTime, runLimit,
CASE (SELECT langId FROM settings WHERE id = 1)
  WHEN 12 THEN en
  WHEN 13 THEN fr
  WHEN 14 THEN ja
  WHEN 15 THEN zh
  ELSE en
  END AS name
FROM reaction
WHERE en LIKE ('%' || :query || '%')  AND groupId IN ?
ORDER BY groupId, name ASC;

getBpcFull:
SELECT id, groupId, isFormula, baseTime, runLimit, materials, products,
CASE (SELECT langId FROM settings WHERE id = 1)
  WHEN 12 THEN en
  WHEN 13 THEN fr
  WHEN 14 THEN ja
  WHEN 15 THEN zh
  ELSE en
  END AS name
FROM reaction
WHERE id = :id AND
groupId != IIF((SELECT isIgnoreFuelBlock FROM settings WHERE id == 1) == 1, 1137, -1);


getBpcFullList:
SELECT id, groupId, isFormula, baseTime, runLimit, materials, products,
CASE (SELECT langId FROM settings WHERE id = 1)
  WHEN 12 THEN en
  WHEN 13 THEN fr
  WHEN 14 THEN ja
  WHEN 15 THEN zh
  ELSE en
  END AS name
FROM reaction
WHERE id IN ?;